/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -a calculatorAdapter comWpAspServer.xml
 *
 * qdbusxml2cpp is Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef CALCULATORADAPTER_H_1436525709
#define CALCULATORADAPTER_H_1436525709

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface com.wp.asp.Calculator
 */
class CalculatorAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.wp.asp.Calculator")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.wp.asp.Calculator\">\n"
"    <signal name=\"computationCompleted\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"str\"/>\n"
"    </signal>\n"
"    <method name=\"helloWorld\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"addition\">\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"a\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"b\"/>\n"
"    </method>\n"
"    <method name=\"subtraction\">\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"a\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"b\"/>\n"
"    </method>\n"
"    <method name=\"multiply\">\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"a\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"b\"/>\n"
"    </method>\n"
"    <method name=\"divide\">\n"
"      <arg direction=\"out\" type=\"d\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"a\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"b\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    CalculatorAdaptor(QObject *parent);
    virtual ~CalculatorAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    int addition(int a, int b);
    double divide(int a, int b);
    QString helloWorld();
    int multiply(int a, int b);
    int subtraction(int a, int b);
Q_SIGNALS: // SIGNALS
    void computationCompleted(const QString &str);
};

#endif
